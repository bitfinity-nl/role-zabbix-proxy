---
# Title: Zabbix proxy install Ubuntu
#
# Author: bitfinity-nl
# Owner: bitfinity-nl
#
# File: tasks/ubuntu/zabbix-proxy-install-ubuntu.yml
#
# Description:
#   Taskfile for deploying Zabbix proxy on Ubuntu.
#
- name: "Download & Install Zabbix {{ item.version }} deb package from '{{ item.ubuntu_source }}' on host '{{ ansible_hostname }}'"
  ansible.builtin.apt:
    deb: "{{ item.ubuntu_source }}"
    state: present

- name: "Update & Upgrade APT repositories on host '{{ ansible_hostname }}'"
  ansible.builtin.apt:
    upgrade: dist
    
- name: "Install Zabbix components {{ item.version }} via APT on host '{{ ansible_hostname }}'"
  ansible.builtin.apt:
    name: "{{ packages.name }}"
    state: present
    update_cache: yes
  loop:
    - { name: 'zabbix-proxy-mysql', desc: 'Zabbix Proxy' }
    - { name: 'zabbix-sql-scripts', desc: 'Zabbix SQL-scripts' }
  loop_control:
    loop_var: packages

- name: "Create initial database on host '{{ ansible_hostname }}' in docker container 'mariadb' on host '{{ ansible_hostname }}'"
  community.mysql.mysql_db:
    name: "{{ zabbix_proxy_dbname }}"
    encoding: utf8
    collation: utf8_bin
    state: present
    login_user: "{{ zabbix_proxy_administrative_user }}"
    login_password: "{{ zabbix_proxy_administrative_pass }}"
#  notify:
#    - import zabbix-dbschema
#    - enable_restart_zabbix-proxy
#    - reboot_server

- name: "Create initial database user on host '{{ ansible_hostname }}' in docker container 'mariadb' on host '{{ ansible_hostname }}'"
  community.mysql.mysql_user:
    name: "{{ zabbix_proxy_dbuser }}"
    password: "{{ zabbix_proxy_dbpass }}"
    priv: "{{ zabbix_proxy_dbname }}.*:ALL,GRANT"
    state: present
    login_user: "{{ zabbix_proxy_administrative_user }}"
    login_password: "{{ zabbix_proxy_administrative_pass }}"
  no_log: True

- name: "Set 'global log_bin_trust_function_creators' in docker container 'mariadb' to '1' on host '{{ ansible_hostname }}'"
  community.mysql.mysql_variables:
    variable: log_bin_trust_function_creators
    value: 1
    login_user: "{{ zabbix_proxy_administrative_user }}"
    login_password: "{{ zabbix_proxy_administrative_pass }}"
  no_log: True
  
- name: "Copy MariaDB / MySQL database schema to the docker container"
  raw: docker cp /usr/share/zabbix-sql-scripts/mysql/proxy.sql mariadb:/proxy.sql

- name: "Import database schema into docker container mariadb"
  raw: docker exec -it mariadb bash -c 'cat /proxy.sql | mariadb --default-character-set=utf8mb4 -uroot -p0penSourceDatabas3 zabbix_proxy '

- name: "Set 'global log_bin_trust_function_creators' in docker container 'mariadb' to '0' on host '{{ ansible_hostname }}'"
  community.mysql.mysql_variables:
    variable: log_bin_trust_function_creators
    value: 0
    login_user: "{{ zabbix_proxy_administrative_user }}"
    login_password: "{{ zabbix_proxy_administrative_pass }}"
  no_log: True
  
- name: "Transfer templates to {{ ansible_hostname }} on host '{{ ansible_hostname }}'"
  template:
    src: "{{ zabbix_template.src }}"
    dest: "{{ zabbix_template.dest }}"
    owner: "{{ zabbix_template.owner }}"
    group: "{{ zabbix_template.group }}"
    mode: "{{ zabbix_template.mode }}"
    backup: yes
  loop:
    - { src: 'templates/zabbix_proxy.conf.j2', dest: '/etc/zabbix/zabbix_proxy.conf', owner: 'root', group: 'root', mode: '0600' }
  loop_control:
    loop_var: zabbix_template

#- name: "import zabbix-dbschema"
  # ansible.builtin.raw: "zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -u {{ zabbix_proxy_administrative_user }} -p{{ zabbix_proxy_administrative_pass }} {{ mariadb_database }}"
#  ansible.builtin.raw: "zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | docker exec -i mariadb -u {{ zabbix_proxy_administrative_user }} -p{{ zabbix_proxy_administrative_pass }} {{ mariadb_database }}"

#docker exec -it mariadb bash -c 'mariadb -u root -p'
#- name: "reboot_server"
#  ansible.builtin.reboot:
  
- name: "enable_restart_zabbix-proxy"
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
    masked: no
  loop:
    - zabbix-proxy
#    - zabbix-agent
    
- name: "Allow traffic from Zabbix server to Zabbix Agent (Passive on port 10050/tcp) on host '{{ ansible_hostname }}'"
  community.general.ufw:
    rule: allow
    port: "{{ ufw.port }}"
    proto: "{{ ufw.proto }}"
  loop:
    - { port: '10050', proto: 'tcp', desc: 'Allow traffic from Zabbix server to Zabbix Agent (Passive) on port 10050/tcp' }
  loop_control:
    loop_var: ufw
